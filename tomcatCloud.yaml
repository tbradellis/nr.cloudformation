Parameters:
  EnvType:
    Description: Install options (apm_monitoring, apm_infra, infra)
    Default: apm_monitoring
    Type: String
    AllowedValues:
      - apm_monitoring
      - apm_infra
      - infra
    ConstraintDescription: must specify a configset (apm_monitoring, apm_infra, or infra).

Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0e86606d #Amazon Linux AMI in N. California
      KeyName: cloudformation
      IamInstanceProfile: 'S3EC2'
      SecurityGroupIds:
        - !Ref myNewSecurityGroup1000
      Tags:
        - Key: Name
          Value: tomcat-linux-newrelic
        - Key: SSM
          Value: permission
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            yum update -y
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource Ec2Instance --configsets ${EnvType} --region ${AWS::Region}

    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          apm_infra:
            - "configure_cfn"
            - "install_tomcat_nr"
            - "infra0"
            - "infra1"
            - "infra2"
            - "infra3"
            - "infra4"
          apm_monitoring:
            - "configure_cfn"
            - "install_tomcat_nr"

          install_nr_infra:
            - "configure_cfn"
            - "infra0"
            - "infra1"
            - "infra2"
            - "infra3"
            - "infra4"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Ec2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource Ec2Instance --configsets ${EnvType} --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root

            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root

          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - '/etc/cfn/cfn-hup.conf'
                  - '/etc/cfn/hooks.d/cfn-auto-reloader.conf'
        install_tomcat_nr:
          packages:
            yum:
              tomcat8: []
              tomcat8-webapps: []
              tomcat8-admin-webapps: []
          sources:
            /usr/share/tomcat8: 'https://s3-us-west-2.amazonaws.com/tomcat.newrelic.artifacts/newrelic.zip'
            /usr/share/tomcat8/conf: 'https://s3-us-west-2.amazonaws.com/tomcat.newrelic.artifacts/tomcat8conf.zip'
          commands:
            user_group:
              command: "chown -R tomcat:tomcat /usr/share/tomcat8"
          services:
            sysvinit:
              tomcat8:
                enabled: "true"
                ensureRunning: "true"

        infra0:
          commands:
            set_yaml:
              command: "echo 'license_key: <1234>' | sudo tee -a /etc/newrelic-infra.yml"
        infra1:
          commands:
            cat_release:
              command: "cat /etc/os-release"
        infra2:
          commands:
            get_repo:
              command: "curl -o /etc/yum.repos.d/newrelic-infra.repo https://download.newrelic.com/infrastructure_agent/linux/yum/el/6/x86_64/newrelic-infra.repo"
        infra3:
          commands:
            clean_enable:
             command: "yum -q makecache -y --disablerepo='*' --enablerepo='newrelic-infra'"
        infra4:
          commands:
            install_infra:
              command: "yum install newrelic-infra -y"

  myNewSecurityGroup1000:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: tokyoSecurity1000
        GroupDescription: Enable Appropriate ports for tomcat-http and ssh
        VpcId: vpc-1e1df77b

        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0

          - IpProtocol: tcp
            FromPort: '8080'
            ToPort: '8080'
            CidrIp: 0.0.0.0/0
